# utils/rag_model.py
import streamlit as st
import pandas as pd

# Em um cen√°rio real, o RAG buscaria trechos da norma ABNT para justificar.
# Aqui, vamos simular esse comportamento com regras pr√©-definidas.
RISK_DESCRIPTIONS = {
    "M-2": "Risco associado ao armazenamento de l√≠quidos e gases inflam√°veis, como em parques de tanques. Requer aten√ß√£o especial a vazamentos e controle de fontes de igni√ß√£o.",
    "I-3": "Ind√∫stria de alto risco, possivelmente com processos qu√≠micos perigosos ou alta carga de inc√™ndio. O tempo de resposta √© cr√≠tico.",
    "J-4": "Dep√≥sitos com alta carga de inc√™ndio. A principal preocupa√ß√£o √© a r√°pida propaga√ß√£o do fogo e o colapso estrutural.",
    "D-2": "Ag√™ncias banc√°rias, que apesar do risco moderado, possuem grande fluxo de pessoas e necessidade de evacua√ß√£o ordenada."
}


def get_rag_recommendation(calc_data: dict, brigadistas_atuais: pd.DataFrame):
    """
    Simula um modelo RAG que atua como um consultor de seguran√ßa.
    
    Args:
        calc_data (dict): Dicion√°rio com os inputs e resultados do c√°lculo oficial.
        brigadistas_atuais (pd.DataFrame): DataFrame com a lista de brigadistas j√° treinados.
    """
    
    # --- Extra√ß√£o de dados para a IA ---
    divisao = calc_data.get("division")
    risco = calc_data.get("risk")
    total_calculado = calc_data.get("total_brigade")
    necessidade_maior_turno = calc_data.get("maior_turno_necessidade")
    num_brigadistas_atuais = len(brigadistas_atuais)
    
    # --- L√≥gica da IA para gerar recomenda√ß√µes ---
    
    # 1. An√°lise de D√©ficit/Super√°vit
    deficit = total_calculado - num_brigadistas_atuais
    if deficit > 0:
        analise_quantitativa = f"üö® **Alerta de D√©ficit:** A sua planta necessita de **{total_calculado}** brigadistas, mas atualmente possui apenas **{num_brigadistas_atuais}** registrados. √â necess√°rio treinar mais **{deficit}** colaborador(es) para atender √† norma."
    else:
        analise_quantitativa = f"‚úÖ **Conformidade Quantitativa:** O n√∫mero de **{num_brigadistas_atuais}** brigadistas treinados atende ou supera o m√≠nimo de **{total_calculado}** exigido pela norma."
        
    # 2. Recomenda√ß√£o de Margem de Seguran√ßa
    margem_sugerida = 2 if risco == "Alto" else 1
    total_recomendado = total_calculado + margem_sugerida
    
    # 3. An√°lise Qualitativa (baseada na Divis√£o)
    descricao_risco = RISK_DESCRIPTIONS.get(divisao, "Risco n√£o mapeado para an√°lise detalhada.")
    
    # --- Montagem do Texto Final ---
    recommendation = f"""
    ### An√°lise e Recomenda√ß√µes da IA

    **1. Diagn√≥stico da Norma:**
    O c√°lculo, baseado estritamente na ABNT NBR 14276, define uma necessidade m√≠nima de **{total_calculado}** brigadistas no total, com um efetivo de pelo menos **{necessidade_maior_turno}** pessoas no turno de maior lota√ß√£o.

    **2. An√°lise Quantitativa do Efetivo Atual:**
    {analise_quantitativa}

    **3. Recomenda√ß√£o Estrat√©gica:**
    Para uma opera√ß√£o mais segura, a IA recomenda um efetivo total de **{total_recomendado} brigadistas**. Essa margem de **{margem_sugerida}** colaborador(es) acima do m√≠nimo garante a cobertura em caso de faltas, f√©rias ou m√∫ltiplas ocorr√™ncias simult√¢neas.

    **4. An√°lise de Risco Espec√≠fico (Divis√£o {divisao}):**
    *"{descricao_risco}"*

    **Pr√≥ximos Passos Sugeridos:**
    - **A√ß√£o Imediata:** Se houver d√©ficit, planeje o treinamento de novos brigadistas.
    - **Auditoria:** Verifique a data de validade dos treinamentos dos brigadistas atuais na planilha.
    - **Preven√ß√£o:** Agende um simulado de emerg√™ncia para os pr√≥ximos 90 dias para testar a resposta da equipe.
    """

    return recommendation
